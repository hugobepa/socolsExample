La operación de multicast consiste en enviar un único mensaje desde un proceso a cada uno de los miembros de un grupo de procesos, de modo que la pertenencia a un grupo sea transparente al emisor, es decir, el emisor no conoce el número de miembros del grupo ni sus direcciones IP.

Un grupo multicast está especificado por una dirección IP clase D y un puerto. Las direcciones IP clase D están en el rango 224.0.0.0 a 239.255.255.255, dentro de este rango existen direcciones reservadas, en concreto, la 224.0.0.1 y la 224.0.0.255. El resto de direcciones del rango pueden ser utilizadas por grupos temporales, los cuales deben ser creados antes de su uso y dejar de existir cuando todos los miembros lo hayan dejado.

Java proporciona una interfaz de datagramas para multicast IP a través de la clase MulticastSocket, que es una subclase de DatagramSocket, con la capacidad adicional de ser capaz de pertenecer a grupos multicast.

La clase MulticastSocket proporciona dos constructores alternativos:

    MulticastSocket(): que crea el socket en cualquiera de los puertos locales libres.
    MulticastSocket(int port): que crea el socket en el puerto local indicado.


Un proceso puede pertenecer a un grupo multicast invocando el método joinGroup(InetAddress mcastaddr) de su socket multicast. Así, el socket pertenecerá a un grupo de multidifusión en un puerto dado y recibirá los datagramas enviados por los procesos en otros computadores a ese grupo en ese puerto. Un proceso puede dejar un grupo dado invocando el método leaveGroup(InetAddress mcastaddr) de su socket multicast.

Para enviar datos a un grupo multicast se utiliza el método send(DatagramPacket p, byte ttl), este método es muy similar al de la clase DatagramSocket, la diferencia es que este datagrama será enviado a todos los miembros del grupo multicast. El parámetro TTL, Time-To-Live, lo pondremos siempre a 1, valor por defecto, para que sólo se difunda en la red local.

Para recibir datos de un grupo multicast se utiliza el método receive(DatagramPacket p) de la clase DatagramSocket superclase de MulticastSocket.

Es necesario pertenecer a un grupo para recibir mensajes multicast enviados a ese grupo, pero no es necesario para enviar mensajes.

Vamos a ver un ejemplo sencillo de utilización de la clase MulticastSocket. Nuestro programa Java implementará las acciones que debe de hacer un participante en un grupo multicast, primero se unirá al grupo, a continuación, enviará un mensaje al grupo, después se quedará a la espera de recibir mensajes de otros participantes del grupo, hasta que el mensaje recibido sea "Adios". Para simplificar el programa, consideramos el caso de que tanto el mensaje que envía el participante, 
como la dirección IP multicast del grupo, se pasan como parámetros. 



Funcionamiento

Para probar el programa, crearemos varias instancias de MiembroMulticast y veremos como cada vez que se crea un nuevo participante su mensaje llega a todos los demás. 
Para que todos los participantes abandonen el grupo, crearemos una instancia de MiembroMulticast con el mensaje "Adios". 

pagar y enceder apache despues cada procesos